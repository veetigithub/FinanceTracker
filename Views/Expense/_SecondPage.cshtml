@model List<FinanceTracker.Models.Expense>

<h1>second page</h1>
@if (User.Identity.IsAuthenticated)
{
    <table class="table">
        <thead>
            <tr>
                <th>Description</th>
                <th>Amount</th>
                <th>Date</th>
                <th>Category</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var expense in Model)
            {
                <tr>
                    <td>@expense.Description</td>
                    <td>@expense.Amount €</td>
                    <td>@expense.Date.ToShortDateString()</td>
                    <td>@expense.Category</td>
                </tr>
            }
        </tbody>
    </table>

    <canvas id="myChart" width="400" height="400"></canvas>
}
else
{
    <h2>You have to login to add expenses</h2>
}


<script>
    // Prepare data (replace this with your actual data)
    var dates = @Html.Raw(Json.Serialize(Model.Select(e => e.Date.ToShortDateString())));
    var amounts = @Html.Raw(Json.Serialize(Model.Select(e => e.Amount)));

    var data = {
        labels: dates,
        datasets: [{
            label: 'Expenses',
            data: amounts,
            backgroundColor: 'rgba(255, 99, 132, 0.2)',
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1
        }]
    };

    // Initialize Chart.js chart
    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: data,
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>